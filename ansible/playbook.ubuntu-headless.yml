---
- hosts: all
  vars:
    dotfiles_home: ~/code/dotfiles

    # lsb_release -cs
    release: jammy

    apt_packages:
     - git
     - curl
     - python3
     - python3-pip
     - ffmpeg
     - fzf
     - gpg
     - htop
     - jq
     - neovim
     - tmux
     - tree
     - watchman
     - wget
     - youtube-dl
     - apt-transport-https
     - ca-certificates
     - gnupg-agent
     - software-properties-common
     - docker-ce
     - docker-ce-cli
     - containerd.io
     - libssl-dev
     - libsqlite3-dev
     - sqlite
     - imagemagick

    asdf_plugins:
      - nodejs
      - ruby
      - golang
      - deno
      - java

    asdf_version: 0.10.2
    nodejs_version: 18.12.1
    yarn_version: 3.2.4
    ruby_version: 3.1.2
    golang_version: 1.19.3
    deno_version: 1.27.2
    java_version: openjdk-18

    python_packages:
     - pynvim
     - docker-compose

    gems:
      - bundler
      - neovim
      - rails
      - rubocop

    node_modules:
      - yarn
      - neovim
      - expo-cli

  tasks:  
    - name: Add an Apt signing key for Docker
      become: yes
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      tags:
        - packages

    - name: Add an Apt repository for Docker
      become: yes
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ release }} stable"
        update_cache: yes
      tags: 
        - packages

    - name: Install apt packages
      become: yes
      apt:
        name: "{{ item }}"
        state: latest
        update_cache: yes
      loop: "{{ apt_packages }}"
      tags: 
        - packages

    - name: Install asdf
      git:
        repo: 'https://github.com/asdf-vm/asdf.git'
        dest: ~/.asdf
        version: "v{{ asdf_version}}"
      tags:
        - asdf

    - name: Add asdf bash integration
      lineinfile:
        path: ~/.bashrc
        line: ". $HOME/.asdf/asdf.sh"
        state: present
      tags:
        - asdf

    - name: Add asdf bash completion
      lineinfile:
        path: ~/.bashrc
        line: ". $HOME/.asdf/completions/asdf.bash"
        state: present
      tags:
        - asdf

    - name: Install asdf plugins
      command: "asdf plugin add {{ item }}"
      loop: '{{ asdf_plugins }}'
      register: plugin_add
      failed_when: plugin_add == 2
      tags:
        - asdf

    - name: Install Node.js nodebuild 
      command: "asdf nodejs update-nodebuild"
      tags:
        - asdf
        - nodejs

    - name: Install Node.js {{ nodejs_version }} with asdf
      command: "asdf install nodejs {{ nodejs_version }}"
      tags:
        - asdf
        - nodejs

    - name: Set global Node.js {{ nodejs_version}} with asdf
      command: "asdf global nodejs {{ nodejs_version }}"
      tags:
        - asdf
        - nodejs

    - name: Install Ruby {{ ruby_version }} with asdf
      command: "asdf install ruby {{ ruby_version }}"
      tags:
        - asdf

    - name: Set global Ruby {{ ruby_version}} with asdf
      command: asdf global ruby {{ ruby_version }}
      tags:
        - asdf
        - ruby

    - name: Install GoLang {{ golang_version }} with asdf
      command: "asdf install golang {{ golang_version }}"
      tags:
        - asdf

    - name: Set global Golang {{ golang_version}} with asdf
      command: asdf global golang {{ golang_version }}
      tags:
        - asdf
        - golang

    - name: Install Deno {{ deno_version }} with asdf
      command: "asdf install deno {{ deno_version }}"
      tags:
        - asdf
        - deno

    - name: Set global Deno {{ deno_version}} with asdf
      command: asdf global deno {{ deno_version }}
      tags:
        - asdf
        - deno

    - name: Install Java {{ java_version }} with asdf
      command: "asdf install java {{ java_version }}"
      tags:
        - asdf
        - java

    - name: Set global Java {{ java_version}} with asdf
      command: asdf global java {{ java_version }}
      tags:
        - asdf
        - java

    - name: Install Pip packages
      pip:
        name: "{{ item }}"
        executable: pip3
      loop: '{{ python_packages }}'
      tags:
        - packages

    - name: Install Gems
      gem:
        name: "{{ item }}"
        state: present
      loop: '{{ gems }}'
      tags:
        - packages

    - name: Install Node global modules
      community.general.npm:
        name: "{{ item }}"
        global: yes
      loop: '{{ node_modules }}'
      tags:
        - packages

    - name: Symlink Tmux
      file:
        src: "{{ dotfiles_home }}/tmux/tmux.conf"
        dest: "~/.tmux.conf"
        state: link
      tags:
        - links

    - name: Symlink NeoVim
      file:
        src: "{{ dotfiles_home }}/nvim"
        dest: "~/.config/nvim"
        state: link
      tags:
        - links

    - name: Symlink Git
      file:
        src: "{{ dotfiles_home }}/git/{{ item }}"
        dest: "~/.{{ item }}"
        state: link
      loop:
        - gitconfig
        - gitignore
      tags:
        - links

    - name: Install vim-plug
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: "~/.config/nvim/autoload/plug.vim"
      tags:
        - vim

    - name: Install plugins
      command: nvim +PlugInstall +qall
      tags:
        - vim

