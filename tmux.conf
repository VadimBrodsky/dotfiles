# tmux
# ----
# <prefix> % - horizontail splilt
# <prefix> " - vertical splilt
# <prefix> o - jump to other pane
# <prefix> : - run tmux commands in a different context
# <prefix> z - zoom in the current window to full size
# <prefix> l - go to the previous / current window
# <prefix> L - go to the previous / current session
# <prefix> d - detach session
# <prefix> [ - start copy mode
#
# tmux new-session -s {name}   # stars a new tmux session
# tmux ls                      # list sessions



# General tmux settings
# ---------------------
# Improved colors
set-option -g default-terminal 'screen-256color'

set-window-option -g automatic-rename off
set-option -g set-titles on

# Enable vi-mode bindings in copy mode
setw -g mode-keys vi
# Set status keys to emacs style instead of the default vi style
# set-option -g status-keys 'emacs'

# start window numbers at 1
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# Enable mouse
set -g mouse on
# set-option -g mouse-select-pane on
# set-option -g mouse-select-window on
# set-option -g mouse-resize-pane on
# set-option -g mouse-utf8 on
# set-window-option -g mode-mouse on

# Set history limit
set-option -g history-limit 50000

# No delay for escape key press
set -sg escape-time 0


# Change Prefix Key
# -----------------
unbind C-b                   # unbind default prefix key C-b
set -g prefix C-a            # set C-a as the prefix key
bind-key -r C-a send-prefix  # send C-a after entering prefix twice



# Key Bindings
# ------------
# Reload tmux configuration
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
bind-key u split-window -h  # bind <prefix> u to split window horizontally

# Bind window splits
bind-key - split-window -v -c '#{pane_current_path}'  # - for horizontal
bind-key / split-window -h -c '#{pane_current_path}'  # / for vertical
bind-key c new-window      -c '#{pane_current_path}'  # c for new window
bind-key b break-pane -d                              # d break pane out

# Sessions
bind-key s choose-tree   # navigate between session

# Window Navigation
bind-key [ previous-window
bind-key ] next-window


# Window Resizing
# Fine adjustment (1 or 2 cursor cells per bump)
# <Ctrl> + <Shift> + arrows
bind -n C-S-Left resize-pane -L 2
bind -n C-S-Right resize-pane -R 2
bind -n C-S-Down resize-pane -D 1
bind -n C-S-Up resize-pane -U 1

# # Coarse adjustment (5 or 10 cursor cells per bump)
# bind -n C-Left resize-pane -L 10
# bind -n C-Right resize-pane -R 10
# bind -n C-Down resize-pane -D 5
# bind -n C-Up resize-pane -U 5


# Change pane foucs with <prefix> + h/j/k/l
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Change pane foucs with <Shift> + arrows
bind -n S-Left select-pane -L
bind -n S-Right select-pane -R
bind -n S-Down select-pane -D
bind -n S-Up select-pane -U

# Change pane foucs with <meta> + h/j/k/l
# bind -n M-h select-pane -L
# bind -n M-j select-pane -D
# bind -n M-k select-pane -U
# bind -n M-l select-pane -R



# Vim Specific
# ------------
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Restore focus events in vim
set -g focus-events on

# Copy/paste to clipboard
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-selection

bind-key -t vi-copy Enter cancel
bind-key -t vi-copy Escape cancel



# Theme
# ---------------------
# soften status bar colors from harsh green to light gray
# set -g status-position top
set -g window-status-current-bg white
set -g window-status-current-fg black
set -g window-status-current-attr bold

## status Line
set -g status-utf8 on
set -g status-justify left
set -g status-bg default
set -g status-fg colour12
set -g status-interval 2

## messaging
set -g message-fg black
set -g message-bg yellow
set -g message-command-fg blue
set -g message-command-bg black

# window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
# setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
# setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
setw -g window-status-current-bg colour0
setw -g window-status-current-fg colour11
setw -g window-status-current-attr dim
setw -g window-status-bg green
setw -g window-status-fg black
setw -g window-status-attr reverse

set -g status-left-length 50
set -g status-left '#[fg=green](#S) #(whoami) '
set -g status-right " #(date '+%a %b %d %I:%M') [#P]"


# The statusbar
set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-attr dim
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20
